---
# Simple Deployment for a static Hello World page
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
        - name: hello-world
          image: nginx:alpine # Using Nginx to serve static files
          ports:
            - containerPort: 80
          volumeMounts:
            - name: html-content
              mountPath: /usr/share/nginx/html
      volumes:
        - name: html-content
          configMap:
            name: hello-world-html

---
# ConfigMap to store the static HTML content
apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-world-html
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>Hello World</title>
    </head>
    <body>
        <h1>Hello, World!</h1>
        <p>Welcome to my simple static page served from Kubernetes!</p>
    </body>
    </html>

---
# Service for the Hello World application
apiVersion: v1
kind: Service
metadata:
  name: hello-world
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: hello-world

---
# Ingress Resource (ALB) for routing traffic to the Hello World app
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world-ingress
  annotations:
    kubernetes.io/ingress.class: alb # Ensure ALB Ingress controller is used
    alb.ingress.kubernetes.io/scheme: internet-facing # Expose ALB publicly
    alb.ingress.kubernetes.io/target-type: ip # Target type to route to pods
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hello-world
                port:
                  number: 80
