name: Terraform AWS Deployment

on:
  push:
    branches:
      - amey

jobs:
  TerraformAWS:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        run: terraform init -upgrade
        working-directory: ./ # Point to your main Terraform directory
        if: success()

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./ # Point to your main Terraform directory
        if: success()

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan -input=false || echo "Terraform plan failed; review configuration."
        working-directory: ./
        if: success()

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve tfplan || echo "Terraform apply failed; review state and plan."
        working-directory: ./ # Point to your main Terraform directory
        if: success()

      - name: Get VPC ID from Terraform Outputs
        id: outputs
        run: |
          # Fetch the VPC ID from Terraform outputs and set it as an environment variable
          VPC_ID=$(terraform output -raw vpc_id)
          echo "VPC_ID=${VPC_ID}" >> $GITHUB_ENV
        working-directory: ./ # Ensure this points to your Terraform directory
        if: success()

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
        if: success()

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: "v3.10.0"
        if: success()

      - name: Install AWS Load Balancer Controller using Helm
        run: |
          helm repo add eks https://aws.github.io/eks-charts
          helm repo update
          helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
            --version "1.10.0" \
            --namespace kube-system \
            --set clusterName=${{ secrets.CLUSTER_NAME }} \
            --set region=${{ secrets.AWS_REGION }} \
            --set vpcId=$VPC_ID
        if: success()
