name: Terraform AWS Deployment

on:
  push:
    branches:
      - amey

jobs:
  TerraformAWS:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-south-1
      TERRAFORM_DIR: "./"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Remove Terraform Cache
        run: rm -rf ${{ env.TERRAFORM_DIR }}/.terraform

      - name: Terraform Init
        run: terraform init -upgrade
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan -input=false
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve tfplan
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Authenticate to ECR
        if: success()
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin 484907523966.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build Docker Image
        if: success()
        run: docker build -t worley-nc-ecr-repo .
        working-directory: ./modules/eks

      - name: Tag Docker Image
        if: success()
        run: |
          docker tag worley-nc-ecr-repo:latest 484907523966.dkr.ecr.ap-south-1.amazonaws.com/worley-nc-ecr-repo:latest
        working-directory: ./modules/eks

      - name: Push Docker Image to ECR
        if: success()
        run: docker push 484907523966.dkr.ecr.ap-south-1.amazonaws.com/worley-nc-ecr-repo:latest

      - name: Configure kubectl
        if: success()
        run: aws eks update-kubeconfig --name Worley-NC-EKS-Cluster --region ${{ env.AWS_REGION }}

      - name: Deploy LBC
        if: success()
        run: kubectl apply -f ./modules/lbc/lbc-deployment.yaml

      - name: Apply LBC Service Account
        if: success()
        run: kubectl apply -f ./modules/lbc/lbc-service-account.yaml

      - name: Check AWS Load Balancer Controller Pods
        if: success()
        run: kubectl get pods -n kube-system -l app=aws-load-balancer-controller --show-labels

      - name: Check AWS Load Balancers
        if: success()
        run: kubectl get services -n kube-system -o wide

      - name: Deploy to EKS
        if: success()
        run: kubectl apply -f ./modules/eks/k8s.yml

      - name: Get Kubernetes Pods
        if: success()
        run: kubectl get pods --show-labels

      - name: Get Kubernetes Services
        if: success()
        run: kubectl get svc
